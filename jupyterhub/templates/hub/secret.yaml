kind: Secret
apiVersion: v1
metadata:
  name: hub-secret
  annotations:
    {{- if or (not .Values.proxy.secretToken) (not .Values.auth.state.cryptoKey) }}
    {{- /* Should always provide both secretToken and cryptoKey, or both no secretToken and no cryptoKey */ -}}
    {{- fail "[Fail] Should always provide both .Values.proxy.secretToken and .Values.auth.state.cryptoKey or both no .Values.proxy.secretToken and no .Values.auth.state.cryptoKey" }}
    {{- end }}
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    {{- if and (not .Values.proxy.secretToken) (not .Values.auth.state.cryptoKey)  }}
    helm.sh/hook: pre-install
    helm.sh/resource-policy: keep
    {{- end }}
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.proxy.secretToken }}
  proxy.token: {{ .Values.proxy.secretToken | b64enc | quote }}
  {{- else }}
  proxy.token: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  {{- if .Values.hub.cookieSecret }}
  hub.cookie-secret: {{ .Values.hub.cookieSecret | b64enc | quote }}
  {{- end }}
  {{- if .Values.hub.db.password }}
  hub.db.password: {{ .Values.hub.db.password | b64enc | quote }}
  {{- end }}
  {{- if .Values.auth.state.enabled }}
  {{- if .Values.auth.state.cryptoKey }}
  auth.state.crypto-key: {{ .Values.auth.state.cryptoKey | b64enc | quote }}
  {{- else }}
  auth.state.crypto-key: {{ randAlphaNum 32 | b64dec | quote }}
  {{- end }}
  {{- end }}
  {{- $values := dict "hub" dict }}
  {{- /* pluck only needed secret values, preserving values.yaml structure */ -}}
  {{- $_ := set $values "auth" dict }}
  {{- range $key, $auth := .Values.auth }}
    {{- if typeIs "map[string]interface {}" $auth }}
      {{- if (or $auth.clientSecret $auth.password) }}
        {{- $_ := set $values.auth $key (pick $auth "clientSecret" "password") }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- $_ := set $values.hub "services" dict }}
  {{- range $key, $service := .Values.hub.services }}
    {{- if $service.apiToken }}
      {{- $_ := set $values.hub.services $key (pick $service "apiToken") }}
    {{- end }}
  {{- end }}
  values.yaml: {{ $values | toYaml | b64enc | quote }}
